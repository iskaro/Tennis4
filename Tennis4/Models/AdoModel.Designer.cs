//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Tennis4Model", "FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tennis4.Models.Competition), "CompetitionRow", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tennis4.Models.CompetitionRow), true)]
[assembly: EdmRelationshipAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tennis4.Models.CompetitionRow), "CompetitionEnrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tennis4.Models.CompetitionEnrollment), true)]
[assembly: EdmRelationshipAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(Tennis4.Models.Player), "CompetitionEnrollment", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(Tennis4.Models.CompetitionEnrollment), true)]

#endregion

namespace Tennis4.Models
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Tennis4Entities : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Tennis4Entities object using the connection string found in the 'Tennis4Entities' section of the application configuration file.
        /// </summary>
        public Tennis4Entities() : base("name=Tennis4Entities", "Tennis4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Tennis4Entities object.
        /// </summary>
        public Tennis4Entities(string connectionString) : base(connectionString, "Tennis4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Tennis4Entities object.
        /// </summary>
        public Tennis4Entities(EntityConnection connection) : base(connection, "Tennis4Entities")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<C__MigrationHistory> C__MigrationHistory
        {
            get
            {
                if ((_C__MigrationHistory == null))
                {
                    _C__MigrationHistory = base.CreateObjectSet<C__MigrationHistory>("C__MigrationHistory");
                }
                return _C__MigrationHistory;
            }
        }
        private ObjectSet<C__MigrationHistory> _C__MigrationHistory;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Competition> Competition
        {
            get
            {
                if ((_Competition == null))
                {
                    _Competition = base.CreateObjectSet<Competition>("Competition");
                }
                return _Competition;
            }
        }
        private ObjectSet<Competition> _Competition;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionEnrollment> CompetitionEnrollment
        {
            get
            {
                if ((_CompetitionEnrollment == null))
                {
                    _CompetitionEnrollment = base.CreateObjectSet<CompetitionEnrollment>("CompetitionEnrollment");
                }
                return _CompetitionEnrollment;
            }
        }
        private ObjectSet<CompetitionEnrollment> _CompetitionEnrollment;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<CompetitionRow> CompetitionRow
        {
            get
            {
                if ((_CompetitionRow == null))
                {
                    _CompetitionRow = base.CreateObjectSet<CompetitionRow>("CompetitionRow");
                }
                return _CompetitionRow;
            }
        }
        private ObjectSet<CompetitionRow> _CompetitionRow;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Player> Player
        {
            get
            {
                if ((_Player == null))
                {
                    _Player = base.CreateObjectSet<Player>("Player");
                }
                return _Player;
            }
        }
        private ObjectSet<Player> _Player;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the C__MigrationHistory EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToC__MigrationHistory(C__MigrationHistory c__MigrationHistory)
        {
            base.AddObject("C__MigrationHistory", c__MigrationHistory);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Competition EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetition(Competition competition)
        {
            base.AddObject("Competition", competition);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionEnrollment EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionEnrollment(CompetitionEnrollment competitionEnrollment)
        {
            base.AddObject("CompetitionEnrollment", competitionEnrollment);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the CompetitionRow EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToCompetitionRow(CompetitionRow competitionRow)
        {
            base.AddObject("CompetitionRow", competitionRow);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the Player EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToPlayer(Player player)
        {
            base.AddObject("Player", player);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tennis4Model", Name="C__MigrationHistory")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class C__MigrationHistory : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new C__MigrationHistory object.
        /// </summary>
        /// <param name="migrationId">Initial value of the MigrationId property.</param>
        /// <param name="contextKey">Initial value of the ContextKey property.</param>
        /// <param name="model">Initial value of the Model property.</param>
        /// <param name="productVersion">Initial value of the ProductVersion property.</param>
        public static C__MigrationHistory CreateC__MigrationHistory(global::System.String migrationId, global::System.String contextKey, global::System.Byte[] model, global::System.String productVersion)
        {
            C__MigrationHistory c__MigrationHistory = new C__MigrationHistory();
            c__MigrationHistory.MigrationId = migrationId;
            c__MigrationHistory.ContextKey = contextKey;
            c__MigrationHistory.Model = model;
            c__MigrationHistory.ProductVersion = productVersion;
            return c__MigrationHistory;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String MigrationId
        {
            get
            {
                return _MigrationId;
            }
            set
            {
                if (_MigrationId != value)
                {
                    OnMigrationIdChanging(value);
                    ReportPropertyChanging("MigrationId");
                    _MigrationId = StructuralObject.SetValidValue(value, false, "MigrationId");
                    ReportPropertyChanged("MigrationId");
                    OnMigrationIdChanged();
                }
            }
        }
        private global::System.String _MigrationId;
        partial void OnMigrationIdChanging(global::System.String value);
        partial void OnMigrationIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ContextKey
        {
            get
            {
                return _ContextKey;
            }
            set
            {
                if (_ContextKey != value)
                {
                    OnContextKeyChanging(value);
                    ReportPropertyChanging("ContextKey");
                    _ContextKey = StructuralObject.SetValidValue(value, false, "ContextKey");
                    ReportPropertyChanged("ContextKey");
                    OnContextKeyChanged();
                }
            }
        }
        private global::System.String _ContextKey;
        partial void OnContextKeyChanging(global::System.String value);
        partial void OnContextKeyChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte[] Model
        {
            get
            {
                return StructuralObject.GetValidValue(_Model);
            }
            set
            {
                OnModelChanging(value);
                ReportPropertyChanging("Model");
                _Model = StructuralObject.SetValidValue(value, false, "Model");
                ReportPropertyChanged("Model");
                OnModelChanged();
            }
        }
        private global::System.Byte[] _Model;
        partial void OnModelChanging(global::System.Byte[] value);
        partial void OnModelChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String ProductVersion
        {
            get
            {
                return _ProductVersion;
            }
            set
            {
                OnProductVersionChanging(value);
                ReportPropertyChanging("ProductVersion");
                _ProductVersion = StructuralObject.SetValidValue(value, false, "ProductVersion");
                ReportPropertyChanged("ProductVersion");
                OnProductVersionChanged();
            }
        }
        private global::System.String _ProductVersion;
        partial void OnProductVersionChanging(global::System.String value);
        partial void OnProductVersionChanged();

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tennis4Model", Name="Competition")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Competition : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Competition object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        public static Competition CreateCompetition(global::System.Int32 id)
        {
            Competition competition = new Competition();
            competition.ID = id;
            return competition;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String CompetitionName
        {
            get
            {
                return _CompetitionName;
            }
            set
            {
                OnCompetitionNameChanging(value);
                ReportPropertyChanging("CompetitionName");
                _CompetitionName = StructuralObject.SetValidValue(value, true, "CompetitionName");
                ReportPropertyChanged("CompetitionName");
                OnCompetitionNameChanged();
            }
        }
        private global::System.String _CompetitionName;
        partial void OnCompetitionNameChanging(global::System.String value);
        partial void OnCompetitionNameChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "CompetitionRow")]
        public EntityCollection<CompetitionRow> CompetitionRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "CompetitionRow");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "CompetitionRow", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tennis4Model", Name="CompetitionEnrollment")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionEnrollment : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionEnrollment object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="playerID">Initial value of the PlayerID property.</param>
        /// <param name="competitionRowID">Initial value of the CompetitionRowID property.</param>
        public static CompetitionEnrollment CreateCompetitionEnrollment(global::System.Int32 id, global::System.Int32 playerID, global::System.Int32 competitionRowID)
        {
            CompetitionEnrollment competitionEnrollment = new CompetitionEnrollment();
            competitionEnrollment.ID = id;
            competitionEnrollment.PlayerID = playerID;
            competitionEnrollment.CompetitionRowID = competitionRowID;
            return competitionEnrollment;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 PlayerID
        {
            get
            {
                return _PlayerID;
            }
            set
            {
                OnPlayerIDChanging(value);
                ReportPropertyChanging("PlayerID");
                _PlayerID = StructuralObject.SetValidValue(value, "PlayerID");
                ReportPropertyChanged("PlayerID");
                OnPlayerIDChanged();
            }
        }
        private global::System.Int32 _PlayerID;
        partial void OnPlayerIDChanging(global::System.Int32 value);
        partial void OnPlayerIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionRowID
        {
            get
            {
                return _CompetitionRowID;
            }
            set
            {
                OnCompetitionRowIDChanging(value);
                ReportPropertyChanging("CompetitionRowID");
                _CompetitionRowID = StructuralObject.SetValidValue(value, "CompetitionRowID");
                ReportPropertyChanged("CompetitionRowID");
                OnCompetitionRowIDChanged();
            }
        }
        private global::System.Int32 _CompetitionRowID;
        partial void OnCompetitionRowIDChanging(global::System.Int32 value);
        partial void OnCompetitionRowIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow")]
        public CompetitionRow CompetitionRow
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<CompetitionRow> CompetitionRowReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<CompetitionRow>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionRow", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player")]
        public Player Player
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Player> PlayerReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Player>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Player>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "Player", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tennis4Model", Name="CompetitionRow")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class CompetitionRow : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new CompetitionRow object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="rowName">Initial value of the RowName property.</param>
        /// <param name="capacity">Initial value of the Capacity property.</param>
        /// <param name="competitionID">Initial value of the CompetitionID property.</param>
        public static CompetitionRow CreateCompetitionRow(global::System.Int32 id, global::System.Int32 rowName, global::System.Int32 capacity, global::System.Int32 competitionID)
        {
            CompetitionRow competitionRow = new CompetitionRow();
            competitionRow.ID = id;
            competitionRow.RowName = rowName;
            competitionRow.Capacity = capacity;
            competitionRow.CompetitionID = competitionID;
            return competitionRow;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 RowName
        {
            get
            {
                return _RowName;
            }
            set
            {
                OnRowNameChanging(value);
                ReportPropertyChanging("RowName");
                _RowName = StructuralObject.SetValidValue(value, "RowName");
                ReportPropertyChanged("RowName");
                OnRowNameChanged();
            }
        }
        private global::System.Int32 _RowName;
        partial void OnRowNameChanging(global::System.Int32 value);
        partial void OnRowNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Capacity
        {
            get
            {
                return _Capacity;
            }
            set
            {
                OnCapacityChanging(value);
                ReportPropertyChanging("Capacity");
                _Capacity = StructuralObject.SetValidValue(value, "Capacity");
                ReportPropertyChanged("Capacity");
                OnCapacityChanged();
            }
        }
        private global::System.Int32 _Capacity;
        partial void OnCapacityChanging(global::System.Int32 value);
        partial void OnCapacityChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CompetitionID
        {
            get
            {
                return _CompetitionID;
            }
            set
            {
                OnCompetitionIDChanging(value);
                ReportPropertyChanging("CompetitionID");
                _CompetitionID = StructuralObject.SetValidValue(value, "CompetitionID");
                ReportPropertyChanged("CompetitionID");
                OnCompetitionIDChanged();
            }
        }
        private global::System.Int32 _CompetitionID;
        partial void OnCompetitionIDChanging(global::System.Int32 value);
        partial void OnCompetitionIDChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition")]
        public Competition Competition
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Competition> CompetitionReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Competition>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Competition>("Tennis4Model.FK_dbo_CompetitionRow_dbo_Competition_CompetitionID", "Competition", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionEnrollment")]
        public EntityCollection<CompetitionEnrollment> CompetitionEnrollment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionEnrollment>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionEnrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionEnrollment>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_CompetitionRow_CompetitionRowID", "CompetitionEnrollment", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Tennis4Model", Name="Player")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Player : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Player object.
        /// </summary>
        /// <param name="id">Initial value of the ID property.</param>
        /// <param name="dayOfBirth">Initial value of the DayOfBirth property.</param>
        public static Player CreatePlayer(global::System.Int32 id, global::System.DateTime dayOfBirth)
        {
            Player player = new Player();
            player.ID = id;
            player.DayOfBirth = dayOfBirth;
            return player;
        }

        #endregion

        #region Simple Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 ID
        {
            get
            {
                return _ID;
            }
            set
            {
                if (_ID != value)
                {
                    OnIDChanging(value);
                    ReportPropertyChanging("ID");
                    _ID = StructuralObject.SetValidValue(value, "ID");
                    ReportPropertyChanged("ID");
                    OnIDChanged();
                }
            }
        }
        private global::System.Int32 _ID;
        partial void OnIDChanging(global::System.Int32 value);
        partial void OnIDChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String FirstName
        {
            get
            {
                return _FirstName;
            }
            set
            {
                OnFirstNameChanging(value);
                ReportPropertyChanging("FirstName");
                _FirstName = StructuralObject.SetValidValue(value, true, "FirstName");
                ReportPropertyChanged("FirstName");
                OnFirstNameChanged();
            }
        }
        private global::System.String _FirstName;
        partial void OnFirstNameChanging(global::System.String value);
        partial void OnFirstNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String LastName
        {
            get
            {
                return _LastName;
            }
            set
            {
                OnLastNameChanging(value);
                ReportPropertyChanging("LastName");
                _LastName = StructuralObject.SetValidValue(value, true, "LastName");
                ReportPropertyChanged("LastName");
                OnLastNameChanged();
            }
        }
        private global::System.String _LastName;
        partial void OnLastNameChanging(global::System.String value);
        partial void OnLastNameChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.DateTime DayOfBirth
        {
            get
            {
                return _DayOfBirth;
            }
            set
            {
                OnDayOfBirthChanging(value);
                ReportPropertyChanging("DayOfBirth");
                _DayOfBirth = StructuralObject.SetValidValue(value, "DayOfBirth");
                ReportPropertyChanged("DayOfBirth");
                OnDayOfBirthChanged();
            }
        }
        private global::System.DateTime _DayOfBirth;
        partial void OnDayOfBirthChanging(global::System.DateTime value);
        partial void OnDayOfBirthChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=true)]
        [DataMemberAttribute()]
        public global::System.String TelephoneNumber
        {
            get
            {
                return _TelephoneNumber;
            }
            set
            {
                OnTelephoneNumberChanging(value);
                ReportPropertyChanging("TelephoneNumber");
                _TelephoneNumber = StructuralObject.SetValidValue(value, true, "TelephoneNumber");
                ReportPropertyChanged("TelephoneNumber");
                OnTelephoneNumberChanged();
            }
        }
        private global::System.String _TelephoneNumber;
        partial void OnTelephoneNumberChanging(global::System.String value);
        partial void OnTelephoneNumberChanged();

        #endregion

        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Tennis4Model", "FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "CompetitionEnrollment")]
        public EntityCollection<CompetitionEnrollment> CompetitionEnrollment
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<CompetitionEnrollment>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "CompetitionEnrollment");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<CompetitionEnrollment>("Tennis4Model.FK_dbo_CompetitionEnrollment_dbo_Player_PlayerID", "CompetitionEnrollment", value);
                }
            }
        }

        #endregion

    }

    #endregion

}
